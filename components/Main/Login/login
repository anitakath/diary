/*

  const loginHandler = async (e) => {
    e.preventDefault();

    if (!email || !password) {
      setError("Bitte füllen Sie alle Felder aus.");
      return;
    }


    try {
      //const { user, session, error } = await signInWithEmail(email, password);
      const { user, session, error } = await supabase.auth.signIn({
        email: email,
        password: password,
      });

      if (error) {
        setError(error);
        return;
      }

      dispatch(login());

      // Aktualisierung der Berechtigungen für den Zugriff auf Fotos im Supabase Storage
      const { data, error: policyError } = await supabase.storage.updatePolicy(
        "images",
        {
          INSERT: ["authenticated"],
          SELECT: ["authenticated"],
          UPDATE: ["authenticated"],
          DELETE: ["authenticated"],
        }
      );

      if (policyError) {
        console.error(
          "Fehler beim Aktualisieren der Berechtigungen:",
          policyError.message
        );
        return;
      }

      router.push("/");
      
    } catch (error) {
      setError(
        "Ein Fehler ist aufgetreten. Bitte versuchen Sie es später erneut."
      );
    }
  };

  */




  
/*
 const loginHandler = async (e) => {
   e.preventDefault();

   if (!email || !password) {
     setError("Bitte füllen Sie alle Felder aus.");
     return;
   }

   try {
     const response = await fetch("/api/login-validation", {
       method: "POST",
       headers: { "Content-Type": "application/json" },
       body: JSON.stringify({ email, password }),
     });

     if (!response.ok) {
       throw new Error(
         "Fehler bei der Anmeldung. Bitte versuchen Sie es erneut."
       );
     }

     const data = await response.json();

     

     if (data) {
       //const usersResponse = await fetch("/api/get-users");
      // const usersData = await usersResponse.json();

       /*if (usersData) {
         let isUserInArray = usersData.data.find(
           (user) => user.email === email && user.password === password
         );

         if (isUserInArray) {
           // Anmeldung des Benutzers in Supabase
           
           // Setzen des aktuellen Benutzers und Weiterleitung nach erfolgreicher Anmeldung
           dispatch(setCurrentUser(isUserInArray));
           dispatch(login());
           router.push("/");
         } else {
           setError(
             "E-Mail oder Passwort ungültig. Bitte überprüfen Sie Ihre Eingaben."
           );
         }
       }
       signInWithEmail(email, password);
     } else {
       setError("E-Mail oder Passwort entsprechen nicht den Anforderungen.");
     }
   } catch (error) {
     setError(
       "Ein Fehler ist aufgetreten. Bitte versuchen Sie es später erneut."
     );
   }
 };
 */